{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 3,
    "pending": 0,
    "failures": 7,
    "start": "2018-07-18T09:30:54.348Z",
    "end": "2018-07-18T09:31:08.968Z",
    "duration": 14620,
    "testsRegistered": 10,
    "passPercent": 30,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "47fc0eab-e53c-4686-8adb-5965d0ded7bb",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "de37e972-e021-4fc0-803e-eeaff77aacdc",
        "title": "用户数据查询测试",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
        "file": "/test/index.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "用户数据查询测试 \"before all\" hook",
            "timedOut": false,
            "duration": 328,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "_connectdb.dbConnection.then(function (rlt) {\n  if (rlt) {\n    done();\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b3b36886-3095-4d09-8399-9da3309ec5b8",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "默认查询一条用户数据",
            "fullTitle": "用户数据查询测试 默认查询一条用户数据",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_User2.default.model.findOne()).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "62b62a8e-04ed-4968-bd87-3236c5df8ea4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "查询18820965455的用户",
            "fullTitle": "用户数据查询测试 查询18820965455的用户",
            "timedOut": false,
            "duration": 144,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.findOne({ username: '18820965455' }).then(function (rlt) {\n      if (rlt) {\n        expect(rlt.username).to.be.equal('18820965455');\n        done();\n      }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "b58dbe74-04dc-470f-8f1a-8cbf9a2e598d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "查询前10条用户数据，并且按照时间顺序倒序排列,并且指定只要用户名和创建时间的字段",
            "fullTitle": "用户数据查询测试 查询前10条用户数据，并且按照时间顺序倒序排列,并且指定只要用户名和创建时间的字段",
            "timedOut": false,
            "duration": 110,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.find({}).skip(0).limit(10).sort({ createdAt: -1 }).then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2aeb205d-c47c-4e0e-9bdb-c85df81d7ae3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "62b62a8e-04ed-4968-bd87-3236c5df8ea4",
          "b58dbe74-04dc-470f-8f1a-8cbf9a2e598d",
          "2aeb205d-c47c-4e0e-9bdb-c85df81d7ae3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 256,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "6d431e5c-fdb5-4d90-a960-2082aa2c9488",
        "title": "测试所有用户的API",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
        "file": "/test/index.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "测试所有用户的API \"before all\" hook",
            "timedOut": false,
            "duration": 6,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "_connectdb.dbConnection.then(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(rlt) {\n    var port, isOccupied;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!rlt) {\n              _context.next = 8;\n              break;\n            }\n            _registerModel.Models.forEach(function (model) {\n              (0, _api.generateRestFul)(model.collectionName, _initApp2.default, model);\n            });\n            port = 7001;\n            _context.next = 5;\n            return (0, _checkport.checkport)(port);\n          case 5:\n            isOccupied = _context.sent;\n            if (!isOccupied) {\n              _initApp2.default.listen(7001);\n            }\n            done();\n          case 8:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());",
            "err": {},
            "isRoot": false,
            "uuid": "63b4a9e7-2348-42f2-acf3-35bdea9d110c",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取用户列表（简略信息）, 只有10条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表（简略信息）, 只有10条, 时间倒序",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "d200f411-5c08-47a5-a795-94e80e28d18b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户列表第8页详细信息, 有8条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表第8页详细信息, 有8条, 时间倒序",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=detail&page=3&pagesize=8\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(8);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "bb5104f6-0466-45c8-a56d-f4207a589d87",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户列表第8页简略信息, 有8条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表第8页简略信息, 有8条, 时间倒序",
            "timedOut": true,
            "duration": 2001,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=breif&page=3&pagesize=8\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "d6fd6753-221e-4f15-ac6a-cceba389a30d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "fullTitle": "测试所有用户的API 根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users/NR4uitrWdh9eL649k\");\nuserPromise.then(function (rlt) {\n  expect(rlt.username).to.be.equal('lawadmin');\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "585cc3ca-bfa8-4bde-a460-1e832e397ff7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "创建一个用户，用户名为testuser87, 密码为testuser872017best, 电话号码为1391234567",
            "fullTitle": "测试所有用户的API 创建一个用户，用户名为testuser87, 密码为testuser872017best, 电话号码为1391234567",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/users/create\", { username: \"testuser87\", passowrd: \"testuser872017best\", mobile: \"1391234567\" });\nuserPromise.then(function (rlt) {\n  var user = _User2.default.model.findById(rlt);\n  expect(user.username).to.be.equal('testuser87');\n  expect(user.profile.mobile).to.be.equal('1391234567');\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "8a5f65d4-c86e-4953-8ca4-0641f6da61de",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "删除一个用户，用户名为testuser87",
            "fullTitle": "测试所有用户的API 删除一个用户，用户名为testuser87",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/users/delete\", { username: \"testuser87\" });\nuserPromise.then(function (rlt) {\n  var user = user.model.findOne({ username: 'testuser87' });\n  expect(user).to.be.equal(null);\n  expect(rlt).to.be.equal(1);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "9f332886-d4c6-4d34-97bc-d5362526a3fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户的OPENID",
            "fullTitle": "测试所有用户的API 获取用户的OPENID",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/nomodel/wechat/users/openid\");\nuserPromise.then(function (rlt) {\n  var user = user.model.findOne({ username: 'testuser87' });\n  expect(user).to.be.equal(null);\n  expect(rlt).to.be.equal(1);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "de59d900-56b9-4612-8de1-2f9bb88aedf1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "d200f411-5c08-47a5-a795-94e80e28d18b",
          "bb5104f6-0466-45c8-a56d-f4207a589d87",
          "d6fd6753-221e-4f15-ac6a-cceba389a30d",
          "585cc3ca-bfa8-4bde-a460-1e832e397ff7",
          "8a5f65d4-c86e-4953-8ca4-0641f6da61de",
          "9f332886-d4c6-4d34-97bc-d5362526a3fe",
          "de59d900-56b9-4612-8de1-2f9bb88aedf1"
        ],
        "pending": [],
        "skipped": [],
        "duration": 14001,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}