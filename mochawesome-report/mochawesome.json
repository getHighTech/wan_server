{
  "stats": {
    "suites": 3,
    "tests": 13,
    "passes": 10,
    "pending": 0,
    "failures": 3,
    "start": "2018-07-23T10:01:49.584Z",
    "end": "2018-07-23T10:01:56.886Z",
    "duration": 7302,
    "testsRegistered": 13,
    "passPercent": 76.9,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "8f2cd9fa-ce7b-4534-99be-f40c19aefc29",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "8a74f8b9-9cec-4ab6-b74d-c710d0670c7d",
        "title": "测试ServerKey模型",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
        "file": "/test/index.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "测试ServerKey模型 \"before all\" hook",
            "timedOut": false,
            "duration": 326,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "_connectdb.dbConnection.then(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(rlt) {\n        var port, isOccupied;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        if (!rlt) {\n                            _context.next = 8;\n                            break;\n                        }\n                        _registerModel.Models.forEach(function (model) {\n                            console.log(model.collectionName);\n                            (0, _api.generateRestFul)(model.collectionName, _initApp2.default, model);\n                        });\n                        port = 7001;\n                        _context.next = 5;\n                        return (0, _checkport.checkport)(port);\n                    case 5:\n                        isOccupied = _context.sent;\n                        if (!isOccupied) {\n                            _initApp2.default.listen(7001);\n                            console.log(\"测试地址在7001端口\");\n                        }\n                        done();\n                    case 8:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _callee, undefined);\n    }));\n    return function (_x) {\n        return _ref.apply(this, arguments);\n    };\n}());",
            "err": {},
            "isRoot": false,
            "uuid": "2917da01-5e36-49bc-8f2e-9bca8dcaf06b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取用户的公钥",
            "fullTitle": "测试ServerKey模型 获取用户的公钥",
            "timedOut": false,
            "duration": 83,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var uuid = (0, _v2.default)();\n_ServerKey2.default.genPublicKey(uuid, \"random\", {}, null).then(function (rlt) {\n    publicKey = rlt.publicKey;\n    var sign = rlt.sign;\n    var randomString = rlt.randomString;\n    var msgCiphered = rlt.msgCiphered;\n    if (_ed2.default.Verify(new Buffer(msgCiphered, 'utf8'), sign, publicKey)) {\n        // 验证函数返回了true，通过验证\n        var msg = (0, _ciphers.decipher)('aes192', publicKey, msgCiphered); //使用公钥解密\n        expect(msg).to.be.equal(randomString);\n        done();\n    }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1872a839-cffc-4efa-b8c8-49b850354a8f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "测试ServerKey的公钥生成方法",
            "fullTitle": "测试ServerKey模型 测试ServerKey的公钥生成方法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "done();",
            "err": {},
            "isRoot": false,
            "uuid": "5d406cd4-5d9b-49d8-92df-f4c162eb094e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "1872a839-cffc-4efa-b8c8-49b850354a8f",
          "5d406cd4-5d9b-49d8-92df-f4c162eb094e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 83,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f375fcef-e9f8-49f8-8700-15402cdc8cf6",
        "title": "用户数据查询测试",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
        "file": "/test/index.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "默认查询一条用户数据1",
            "fullTitle": "用户数据查询测试 默认查询一条用户数据1",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_User2.default.model.findOne()).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "45dedf17-8619-4028-ac11-6e3064602a71",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "查询18820965455的用户",
            "fullTitle": "用户数据查询测试 查询18820965455的用户",
            "timedOut": false,
            "duration": 140,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.findOne({ username: '18820965455' }).then(function (rlt) {\n      if (rlt) {\n        expect(rlt.username).to.be.equal('18820965455');\n        done();\n      }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "83119d3a-6f9e-474c-a09c-ce68f5208a7e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "查询前10条用户数据，并且按照时间顺序倒序排列,并且指定只要用户名和创建时间的字段",
            "fullTitle": "用户数据查询测试 查询前10条用户数据，并且按照时间顺序倒序排列,并且指定只要用户名和创建时间的字段",
            "timedOut": false,
            "duration": 127,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.find({}).skip(0).limit(10).sort({ createdAt: -1 }).then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9938533d-7604-4eef-a938-5020c99f8501",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "fullTitle": "用户数据查询测试 根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "timedOut": false,
            "duration": 69,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.findOne({ 'username': 'lawadmin' }).then(function (rlt) {\n  expect(rlt.username).to.be.equal('lawadmin');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9e346b14-6dc3-4a3e-8aa0-a82ecaf9628f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "45dedf17-8619-4028-ac11-6e3064602a71",
          "83119d3a-6f9e-474c-a09c-ce68f5208a7e",
          "9938533d-7604-4eef-a938-5020c99f8501",
          "9e346b14-6dc3-4a3e-8aa0-a82ecaf9628f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 338,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1b52e46d-4716-4d60-8410-cadd916577a3",
        "title": "测试所有用户的API",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
        "file": "/test/index.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取用户列表（简略信息）, 只有10条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表（简略信息）, 只有10条, 时间倒序",
            "timedOut": false,
            "duration": 152,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "12a92419-e4d9-4c9f-866e-b1d45be2ccd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户列表第3页详细信息, 有8条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表第3页详细信息, 有8条, 时间倒序",
            "timedOut": false,
            "duration": 109,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=detail&page=3&pagesize=4\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(4);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "74b44c90-1365-42a0-80aa-891cc240d83a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户列表第8页简略信息, 有8条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表第8页简略信息, 有8条, 时间倒序",
            "timedOut": false,
            "duration": 181,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=breif&page=8&pagesize=8\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(8);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "71980f03-bda2-4f7f-ae0f-4743523bc6f2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "fullTitle": "测试所有用户的API 根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "timedOut": false,
            "duration": 81,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users/lawadmin\");\nuserPromise.then(function (rlt) {\n  console.log('93---------------------------');\n  var zsx = rlt.auth_cards;\n  expect(rlt.data.username).to.be.equal('lawadmin');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b8bbb67c-dbf1-4d8c-a80e-5f09c60de453",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "创建一个用户，用户名为testuser87, 密码为testuser872017best, 电话号码为1391234567",
            "fullTitle": "测试所有用户的API 创建一个用户，用户名为testuser87, 密码为testuser872017best, 电话号码为1391234567",
            "timedOut": true,
            "duration": 2002,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/users/create\", { username: \"testuser87\", passowrd: \"testuser872017best\", mobile: \"1391234567\" });\nuserPromise.then(function (rlt) {\n  var user = _User2.default.model.findById(rlt);\n  expect(user.username).to.be.equal('testuser87');\n  expect(user.profile.mobile).to.be.equal('1391234567');\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "c7743b9e-c2b4-414c-9fbe-8d19b8719fb2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "删除一个用户，用户名为testuser87",
            "fullTitle": "测试所有用户的API 删除一个用户，用户名为testuser87",
            "timedOut": true,
            "duration": 2001,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/users/delete\", { username: \"testuser87\" });\nuserPromise.then(function (rlt) {\n  var user = user.model.findOne({ username: 'testuser87' });\n  expect(user).to.be.equal(null);\n  expect(rlt).to.be.equal(1);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "0595c2f3-f22b-444e-b397-4011ad5baa47",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户的OPENID",
            "fullTitle": "测试所有用户的API 获取用户的OPENID",
            "timedOut": true,
            "duration": 2003,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/nomodel/wechat/users/openid\");\nuserPromise.then(function (rlt) {\n  var user = user.model.findOne({ username: 'testuser87' });\n  expect(user).to.be.equal(null);\n  expect(rlt).to.be.equal(1);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "72d5cd8a-b455-43a6-b91d-1e231ebffe4c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "12a92419-e4d9-4c9f-866e-b1d45be2ccd3",
          "74b44c90-1365-42a0-80aa-891cc240d83a",
          "71980f03-bda2-4f7f-ae0f-4743523bc6f2",
          "b8bbb67c-dbf1-4d8c-a80e-5f09c60de453"
        ],
        "failures": [
          "c7743b9e-c2b4-414c-9fbe-8d19b8719fb2",
          "0595c2f3-f22b-444e-b397-4011ad5baa47",
          "72d5cd8a-b455-43a6-b91d-1e231ebffe4c"
        ],
        "pending": [],
        "skipped": [],
        "duration": 6529,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}