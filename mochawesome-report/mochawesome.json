{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 5,
    "pending": 0,
<<<<<<< HEAD
    "failures": 6,
    "start": "2018-07-09T08:06:23.929Z",
    "end": "2018-07-09T08:06:36.552Z",
    "duration": 12623,
    "testsRegistered": 9,
    "passPercent": 33.3,
=======
    "failures": 5,
    "start": "2018-06-29T09:22:18.190Z",
    "end": "2018-06-29T09:22:29.085Z",
    "duration": 10895,
    "testsRegistered": 10,
    "passPercent": 50,
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
<<<<<<< HEAD
    "uuid": "989786be-476a-427a-a2b7-a74fd0fc5244",
=======
    "uuid": "50fb3ce7-f3b9-47f1-9a4f-58744ac63fdb",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
<<<<<<< HEAD
        "uuid": "935ace2a-edaa-4c33-a052-e8b356d38113",
        "title": "用户数据查询测试",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
=======
        "uuid": "3d6c0a5f-f6c5-4df8-81ab-4395046181a8",
        "title": "用户数据查询测试",
        "fullFile": "/home/simon/wan_server/test/index.js",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
        "file": "/test/index.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "用户数据查询测试 \"before all\" hook",
            "timedOut": false,
<<<<<<< HEAD
            "duration": 316,
=======
            "duration": 278,
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "_connectdb.dbConnection.then(function (rlt) {\n  if (rlt) {\n    done();\n  }\n});",
            "err": {},
            "isRoot": false,
<<<<<<< HEAD
            "uuid": "1c9c733c-e706-4778-831d-815efc2dbef8",
=======
            "uuid": "456fbb11-7108-4d7b-856c-0b72c0a5396a",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "默认查询一条用户数据",
            "fullTitle": "用户数据查询测试 默认查询一条用户数据",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_User2.default.model.findOne()).to.be.ok;",
            "err": {},
            "isRoot": false,
<<<<<<< HEAD
            "uuid": "1e151bfc-9d91-4a8a-b72c-5d9cfbd2371c",
=======
            "uuid": "7d2ccf41-43b7-4810-ba9c-95ad77ed91a9",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "查询18820965455的用户",
            "fullTitle": "用户数据查询测试 查询18820965455的用户",
            "timedOut": false,
<<<<<<< HEAD
            "duration": 137,
=======
            "duration": 126,
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.findOne({ username: '18820965455' }).then(function (rlt) {\n      if (rlt) {\n        expect(rlt.username).to.be.equal('18820965455');\n        done();\n      }\n    });",
            "err": {},
            "isRoot": false,
<<<<<<< HEAD
            "uuid": "36d15485-55f8-4526-9c95-abded5785e73",
=======
            "uuid": "19994f50-ab4c-4e8c-8094-a6b2f6b82917",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "查询前10条用户数据，并且按照时间顺序倒序排列,并且指定只要用户名和创建时间的字段",
            "fullTitle": "用户数据查询测试 查询前10条用户数据，并且按照时间顺序倒序排列,并且指定只要用户名和创建时间的字段",
            "timedOut": false,
<<<<<<< HEAD
            "duration": 126,
=======
            "duration": 183,
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "_User2.default.model.find({}).skip(0).limit(10).sort({ createdAt: -1 }).then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
<<<<<<< HEAD
            "uuid": "f5482599-03f9-4b1a-b923-f32531d2daf3",
=======
            "uuid": "b459f744-32ae-48b1-86ea-522464100fa7",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
<<<<<<< HEAD
          "1e151bfc-9d91-4a8a-b72c-5d9cfbd2371c",
          "36d15485-55f8-4526-9c95-abded5785e73",
          "f5482599-03f9-4b1a-b923-f32531d2daf3"
=======
          "7d2ccf41-43b7-4810-ba9c-95ad77ed91a9",
          "19994f50-ab4c-4e8c-8094-a6b2f6b82917",
          "b459f744-32ae-48b1-86ea-522464100fa7"
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
<<<<<<< HEAD
        "duration": 266,
=======
        "duration": 312,
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
<<<<<<< HEAD
        "uuid": "871aaeb5-7ba0-4ee8-b45b-b105c8377f8b",
        "title": "测试所有用户的API",
        "fullFile": "/home/zhoushixiong/wan_server/test/index.js",
=======
        "uuid": "d78f4318-ae08-4896-8ce5-0ada796103ef",
        "title": "测试所有用户的API",
        "fullFile": "/home/simon/wan_server/test/index.js",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
        "file": "/test/index.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "测试所有用户的API \"before all\" hook",
            "timedOut": false,
<<<<<<< HEAD
            "duration": 5,
=======
            "duration": 6,
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "_connectdb.dbConnection.then(async function (rlt) {\n  if (rlt) {\n    _registerModel.Models.forEach(function (model) {\n      (0, _api.generateRestFul)(model.collectionName, _initApp2.default, model);\n    });\n    var port = 7001;\n    var isOccupied = await (0, _checkport.checkport)(port);\n    if (!isOccupied) {\n      _initApp2.default.listen(7001);\n    }\n    done();\n  }\n});",
            "err": {},
            "isRoot": false,
<<<<<<< HEAD
            "uuid": "92b5abcd-5c30-40c8-8356-277f8a94bacc",
=======
            "uuid": "f8f199bf-206d-46dc-a010-c12dc727a630",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "获取用户列表（简略信息）, 只有10条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表（简略信息）, 只有10条, 时间倒序",
            "timedOut": false,
            "duration": 154,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
<<<<<<< HEAD
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "700e28bc-177f-45de-af20-c49881ff05d8",
=======
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2dbe810c-cca2-4961-82cb-73ff86bac394",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户列表第8页详细信息, 有8条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表第8页详细信息, 有8条, 时间倒序",
<<<<<<< HEAD
            "timedOut": true,
            "duration": 2001,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=detail&page=3&pagesize=8\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "3c879f1f-6430-4876-bc01-3e4673d59e23",
=======
            "timedOut": false,
            "duration": 123,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=detail&page=3&pagesize=8\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt.data[0].createdAt;\n  var secondMoment = rlt.data[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.data.length).to.be.equal(8);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a5730124-5ba6-4b5f-b2c2-9b609768cbfc",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户列表第8页简略信息, 有8条, 时间倒序",
            "fullTitle": "测试所有用户的API 获取用户列表第8页简略信息, 有8条, 时间倒序",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users?version=breif&page=3&pagesize=8\");\nuserPromise.then(function (rlt) {\n  var firtMoment = rlt[0].createdAt;\n  var secondMoment = rlt[1].createdAt;\n  var isUpdate = (0, _moment2.default)(firtMoment).isAfter((0, _moment2.default)(secondMoment));\n  expect(rlt.length).to.be.equal(10);\n  expect(isUpdate).to.be.equal(true);\n  done();\n});",
            "err": {
<<<<<<< HEAD
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "5b585e1c-f465-4b3e-b257-dd6dbe496b4f",
=======
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "f7bb4883-1458-450b-a727-f8bdccedebbb",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "fullTitle": "测试所有用户的API 根据用户Id: NR4uitrWdh9eL649k,查询一个用户， 其用户名为lawadmin",
            "timedOut": true,
            "duration": 2001,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.get(\"http://localhost:7001/api/v1/users/NR4uitrWdh9eL649k\");\nuserPromise.then(function (rlt) {\n  expect(rlt.username).to.be.equal('lawadmin');\n  done();\n});",
            "err": {
<<<<<<< HEAD
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "694fc367-c841-41a5-b22c-0fea36f707f3",
=======
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "aad5148a-a981-408f-9b18-6b349f246d25",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "创建一个用户，用户名为testuser87, 密码为testuser872017best, 电话号码为1391234567",
            "fullTitle": "测试所有用户的API 创建一个用户，用户名为testuser87, 密码为testuser872017best, 电话号码为1391234567",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/users/create\", { username: \"testuser87\", passowrd: \"testuser872017best\", mobile: \"1391234567\" });\nuserPromise.then(function (rlt) {\n  var user = _User2.default.model.findById(rlt);\n  expect(user.username).to.be.equal('testuser87');\n  expect(user.profile.mobile).to.be.equal('1391234567');\n  done();\n});",
            "err": {
<<<<<<< HEAD
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "5c2aca03-c271-4a58-a8e2-71537314f9f2",
=======
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "b34addbc-cd13-4982-90ff-71cb3a607606",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          },
          {
            "title": "删除一个用户，用户名为testuser87",
            "fullTitle": "测试所有用户的API 删除一个用户，用户名为testuser87",
            "timedOut": true,
            "duration": 2000,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/users/delete\", { username: \"testuser87\" });\nuserPromise.then(function (rlt) {\n  var user = user.model.findOne({ username: 'testuser87' });\n  expect(user).to.be.equal(null);\n  expect(rlt).to.be.equal(1);\n  done();\n});",
            "err": {
<<<<<<< HEAD
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/zhoushixiong/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "4ab40155-6316-4c24-8a12-54128b3225d1",
=======
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "7f975c4e-3385-4878-8f71-66fb5c2f0420",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "获取用户的OPENID",
            "fullTitle": "测试所有用户的API 获取用户的OPENID",
            "timedOut": true,
            "duration": 2001,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "var userPromise = _axios2.default.post(\"http://localhost:7001/api/v1/nomodel/wechat/users/openid\");\nuserPromise.then(function (rlt) {\n  var user = user.model.findOne({ username: 'testuser87' });\n  expect(user).to.be.equal(null);\n  expect(rlt).to.be.equal(1);\n  done();\n});",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/simon/wan_server/test/index.js)"
            },
            "isRoot": false,
            "uuid": "02d2f72b-b7cd-46b6-a883-21328389e296",
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2dbe810c-cca2-4961-82cb-73ff86bac394",
          "a5730124-5ba6-4b5f-b2c2-9b609768cbfc"
        ],
        "failures": [
<<<<<<< HEAD
          "700e28bc-177f-45de-af20-c49881ff05d8",
          "3c879f1f-6430-4876-bc01-3e4673d59e23",
          "5b585e1c-f465-4b3e-b257-dd6dbe496b4f",
          "694fc367-c841-41a5-b22c-0fea36f707f3",
          "5c2aca03-c271-4a58-a8e2-71537314f9f2",
          "4ab40155-6316-4c24-8a12-54128b3225d1"
=======
          "f7bb4883-1458-450b-a727-f8bdccedebbb",
          "aad5148a-a981-408f-9b18-6b349f246d25",
          "b34addbc-cd13-4982-90ff-71cb3a607606",
          "7f975c4e-3385-4878-8f71-66fb5c2f0420",
          "02d2f72b-b7cd-46b6-a883-21328389e296"
>>>>>>> 1138dc1879280ed617e53fca87a0b6f7d55e4e23
        ],
        "pending": [],
        "skipped": [],
        "duration": 10279,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}